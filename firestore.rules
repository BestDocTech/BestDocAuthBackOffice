rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to get user data from Firestore
    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }
    
    // Helper function to check if user is admin or clientAdmin
    function isAdmin() {
      return isAuthenticated() && 
             (getUserData().isAdmin == true || getUserData().isClientAdmin == true);
    }
    
    // Users collection rules
    match /users/{userId} {
      // Allow read for everyone (no authentication required)
      allow read: if true;
      
      // Allow write (create, update, delete) only for authenticated admins
      allow write: if isAdmin();
    }
    
    // Clients collection rules  
    match /clients/{clientId} {
      // Allow read and write only for authenticated users
      allow read, write: if isAuthenticated();
    }
    
    // Deny all other collections by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
} 